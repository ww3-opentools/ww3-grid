## configuration file for gebco_reduce

# each category represents an 'action' given to the run_gebco_reduce script

## 'reduce' action; return a bathymetry averaged over N=scalefac cells
#   parameters as follows:
#   scalefac     - integer, integer reduction factor for the grid
#   depthmin     - float, minimum depth for land-sea cut-off (negative for point in sea)
#   region       - None/string, names for region with extents below
#   extents      - comma delimited floats, domain corners as SW-lon, SW-lat, NE-lon, NE-lat
#   pltchk       - true/false, show results of processing using matplotlib
#   correctlakes - true/false, apply the lake and below MSL land corrections
#   gebcofile    - string, the GEBCO bathy file
#   datadir      - string, working directory containing the GEBCO file and reduced file
[reduce]
scalefac = 6
depthmin = 0.0
region = None
extents = None
pltchk = True
correctlakes = False
gebcofile = GEBCO_2014_2D.nc
datadir = ./

## 'interpolate' action; return a bathymetry interpolated to a defined new grid
#   parameters as follows:
#   dx           - float, cell resolution in x (longitude) dimension for the new grid
#   dy           - float, cell resolution in y (latitude) dimension for the new grid
#   depthmin     - float, minimum depth for land-sea cut-off (negative for point in sea)
#   region       - None/string, names for region with extents below
#   extents      - comma delimited floats, domain corners as SW-lon, SW-lat, NE-lon, NE-lat
#   pltchk       - true/false, show results of processing using matplotlib
#   correctlakes - true/false, apply the lake and below MSL land corrections
#   gebcofile    - string, the GEBCO bathy file
#   datadir      - string, working directory containing the GEBCO file and reduced file
[interpolate]
dx = 0.5
dy = 0.5
depthmin = -1.0
region = None
extents = None
pltchk = True
correctlakes = False
gebcofile = GEBCO_2014_2D.nc
datadir = ./

## 'correct' action; update bathymetry to correct elevations for lakes and remove land below mean-sea level
#   parameters as follows:
#   depthmin     - float, minimum depth for land-sea cut-off
#   removesmall  - None/integer, (square) side size for small water bodies to be removed
#   caspianonly  - true/false, only add CaspianSea as a lake, this may be preferable for large scale global applications
#   pltchk       - true/false, show results of processing using matplotlib
#   ncfile       - string, the working reduced GEBCO netCDF bathy/landmask file
#   datadir      - string, working directory containing the reduced file
[correct]
depthmin = 0.0
removesmall = None
caspianonly = False
pltchk = True
ncfile = GEBCO_2014_2D_reduced_6.nc
datadir = ./

## 'plot' action; plot a generated bathymetry from its netCDF file
#   parameters as follows:
#   depthmin     - float, minimum depth for land-sea cut-off
#   depthmax     - float, minimum depth for land-sea cut-off
#   ncfile       - string, the working reduced GEBCO netCDF bathy/landmask file
#   datadir      - string, working directory containing the reduced file
#   usedepths    - true/false, plot the depths data
#   uselandsea   - true/false, plot the land-sea mask
[plot]
depthmin = 5.0
depthmax = -500.0
ncfile = GEBCO_2014_2D_reduced_6.nc
datadir = ./
usedepths = True
uselandsea = True
